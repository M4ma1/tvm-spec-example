{
	// Place your tvm-spec-example workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"value flow stack": {
		"scope": "json",
		"prefix": "vf",
		"body": ["\"inputs\": {",
            "    \"stack\": [",
            "    ]",
            "},",
			"\"outputs\": {",
            "    \"stack\": [",
            "    ]",
            "}"]
	},
	"conditional": {
		"scope": "json",
		"prefix": "qu",
		"body": [
			"{",
			"    \"type\": \"conditional\",",
			"    \"name\": \"status\",",
			"    \"match\": [",
			"        {",
			"            \"value\": 0,",
			"            \"stack\": []",
			"        },",
			"        {",
			"            \"value\": -1,",
			"            \"stack\": []",
			"        }",
			"    ]",
			"},"
			"{",
			"    \"type\": \"simple\",",
			"    \"name\": \"status\",",
			"    \"value_types\": [\"Integer\"]",
			"}"
		]
	},
	"simple": {
		"scope": "json",
		"prefix": "si",
		"body": [
			"{",
			"    \"type\": \"simple\",",
			"    \"name\": \"i\",",
			"    \"value_types\": [\"Integer\"]",
			"}"
		]
	}
}